import { withAuth } from "next-auth/middleware";
import { NextResponse } from "next/server";

const adminEmails = process.env.ADMIN_EMAILS?.split(',').map(e => e.trim()) || [
  'admin@digestgenie.com',
  'matekaj@proton.me',
  'xmatekaj@gmail.com'
];

export default withAuth(
  function middleware(req) {
    const token = req.nextauth.token;
    const isAdmin = token?.email && adminEmails.includes(token.email);
    const path = req.nextUrl.pathname;
    
    // Redirect admins from /dashboard to /admin
    if (isAdmin && path === '/dashboard') {
      return NextResponse.redirect(new URL('/admin', req.url));
    }
    
    // Block non-admins from /admin routes
    if (path.startsWith('/admin') && !isAdmin) {
      return NextResponse.redirect(new URL('/dashboard', req.url));
    }
    
    return NextResponse.next();
  },
  {
    callbacks: {
      authorized: ({ token }) => !!token,
    },
  }
);

export const config = {
  matcher: [
    '/dashboard/:path*',
    '/admin/:path*'
  ],
};